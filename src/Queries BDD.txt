--------------------------------------------------------------------
Creamos columna para concatenar el nombre en tabla "actor"
--------------------------------------------------------------------

ALTER TABLE actor 
ADD complet_name VARCHAR(100) not null;

select * from actor;

UPDATE actor SET complet_name = concat(first_name, ' ', last_name);

--------------------------------------------------------------------
Eliminamos columna duplicada en proceso de pruebas
--------------------------------------------------------------------
alter table actor drop column complete_name;
  
--------------------------------------------------------------------
Modificamos valores erróneos de inventory_id por random
--------------------------------------------------------------------
select * from rental;

update rental set inventory_id = ROUND((1000) * RAND() + 1);

--------------------------------------------------------------------
Creamos columna para concatenar el nombre en tabla "old_hdd"
--------------------------------------------------------------------
ALTER TABLE old_hdd 
ADD complet_name VARCHAR(100) not null;

UPDATE old_hdd SET complet_name = concat(first_name, ' ', last_name);

--------------------------------------------------------------------
Creamos tabla permanente para relación many-to-many
--------------------------------------------------------------------
create table filmactor
select f.film_id, a.actor_id, c.category_id
from film as f

inner join old_hdd as o
on f.title = o.title

left join actor as a
on a.complet_name = o.complet_name

left join category as c
on c.category_id = o.category_id
;

--------------------------------------------------------------------
Añadimos categoría de "primary key" y relaciones con "foreign key"
--------------------------------------------------------------------
select * from actor;

alter table actor
add primary key (actor_id);

delete from actor where actor_id is null;

ALTER TABLE filmactor
   ADD FOREIGN KEY (actor_id) 
      REFERENCES actor(actor_id);
      
ALTER TABLE filmactor
DROP CONSTRAINT actor_id;

alter table film
add primary key (film_id);

alter table category
add primary key (category_id);

alter table languaje
add primary key (language_id);

alter table inventory
add primary key (inventory_id);

alter table rental
add primary key (rental_id);

ALTER TABLE filmactor
   ADD FOREIGN KEY (film_id) 
      REFERENCES film(film_id);
      
ALTER TABLE filmactor
   ADD FOREIGN KEY (category_id) 
      REFERENCES category(category_id);
      
ALTER TABLE inventory
   ADD FOREIGN KEY (film_id) 
      REFERENCES film(film_id);
      
ALTER TABLE rental
   ADD FOREIGN KEY (inventory_id) 
      REFERENCES inventory(inventory_id);
      
ALTER TABLE film
   ADD FOREIGN KEY (language_id) 
      REFERENCES languaje(language_id);


--------------------------------------------------------------------
Corregimos columna que daba problemas de compatibilidad
--------------------------------------------------------------------      
select * from film;

ALTER TABLE film DROP COLUMN language_id;
 
ALTER TABLE film 
ADD language_id BIGINT null;

UPDATE film SET language_id = 1;

select * from film;

ALTER TABLE film
   ADD FOREIGN KEY (language_id) 
      REFERENCES languaje(language_id);
      
--------------------------------------------------------------------
Creamos tabla "old_hdd" por sustitución por "filmactor"
--------------------------------------------------------------------
DROP TABLE old_hdd;


--------------------------------------------------------------------
Tiramos queries para comprobar el buen funcionamiento de la BBDD
--------------------------------------------------------------------
¿Cuáles son los 10 actores con más películas de rating "R"?
--------------------------------------------------------------------
select a.complet_name, count(fa.film_id) as film_quantity, group_concat(f.title)
from actor as a

left join filmactor as fa
on a.actor_id = fa.actor_id

left join film as f
on f.film_id = fa.film_id 

where f.rating = 'R'

group by complet_name
order by film_quantity desc
limit 10
;
--------------------------------------------------------------------
¿Cuáles son las 10 pelis de "rental duration" > 5 con más actores?
--------------------------------------------------------------------
select f.title, count(a.actor_id) as actor_quantity, group_concat(a.complet_name), f.rental_duration
from film as f

left join filmactor as fa
on f.film_id = fa.film_id

left join actor as a
on fa.actor_id = a.actor_id

where f.rental_duration > 5
group by f.title
order by actor_quantity desc
limit 10
;

--------------------------------------------------------------------
¿Cuáles son las 10 pelis de mayor duración sin actores y rate >  4?
--------------------------------------------------------------------
select f.title, f.rental_rate, f.length, a.complet_name
from film as f

left join filmactor as fa
on f.film_id = fa.film_id

left join actor as a
on fa.actor_id = a.actor_id

where a.actor_id is null and f.rental_rate > 4

group by f.film_id
order by f.length desc
limit 10
;

--------------------------------------------------------------------
¿Cuáles son las mejores pelis de horror (rate 4+) de +120 min?
--------------------------------------------------------------------
select f.title, f.rental_rate, f.length, c.name
from film as f

left join filmactor as fa
on f.film_id = fa.film_id

left join category as c
on c.category_id = fa.category_id

where c.name = 'horror' and f.rental_rate > 4 and f.length > 120

group by f.title
;

--------------------------------------------------------------------
¿Cuáles son las comedias inglesas con menos actores?
--------------------------------------------------------------------
select f.title, c.name, l.language, count(actor_id) as actor_quantity
from film as f

left join languaje as l
on f.language_id = l.language_id

left join filmactor as fa
on fa.film_id = f.film_id

left join category as c
on c.category_id = fa.category_id

where c.name = 'Comedy' and l.language like '%Eng%'
group by f.title
order by actor_quantity asc
;

--------------------------------------------------------------------
¿Cuáles son las categorías con más películas?
--------------------------------------------------------------------
select c.name, count(c.category_id) as films_quantity
from category as c

left join filmactor as fa
on fa.category_id = c.category_id

left join film as f
on f.film_id = fa.film_id

group by c.name
order by films_quantity desc
;